package com.fizzed.rocker.compiler;

import java.io.IOException;
import com.fizzed.rocker.ContentType;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;

/*
 * Auto generated code to render template com/fizzed/rocker/compiler/Compile.rocker.html
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
public class Compile2 {

    private String val;




    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate<Compile> {

        // <h1>no header</h1>
        static private final byte[] PLAIN_TEXT_0_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(Compile.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
        }

        public Compile2() {
            super();
            __internal.setCharset("UTF-8");
            __internal.setContentType(ContentType.HTML);
            __internal.setTemplateName("Compile.rocker.html");
            __internal.setTemplatePackageName("com.fizzed.rocker.compiler");
        }

        @Override
        protected void __render() throws IOException, RenderingException {
            // PlainText
            __internal.aboutToExecutePosInTemplate(1, 1);
            __internal.writeValue(PLAIN_TEXT_0_0);
        }

        private static class PlainText {

            static private final String PLAIN_TEXT_0_0 = "<h1>no header</h1>";

        }

    }
}
